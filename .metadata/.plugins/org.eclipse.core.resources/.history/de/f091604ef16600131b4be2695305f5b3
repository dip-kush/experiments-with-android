package com.hacknight.expensebot.slidingmenu;

import java.util.ArrayList;

import android.R.bool;
import android.app.Activity;
import android.app.Fragment;
import android.content.res.Configuration;
import android.content.res.TypedArray;
import android.os.Bundle;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.widget.DrawerLayout;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ListView;

import com.hacknight.expensebot.R;

public class MainActivity extends Activity {
	private DrawerLayout mDrawerLayout;
	private ListView mDrawerList;
	private ActionBarDrawerToggle mDrawerToggle;
	
	//nav drawer title
	private CharSequence mDrawerTitle;

	// used to store app title
	private CharSequence mTitle;
	
	//slide menu title
	private String[] navMenuTitles;
	private TypedArray navMenuIcons;
	
	private ArrayList<NavDrawerItem> navDrawerItems;
	private NavDrawerListAdapter adapter;
	
	@Override
	    protected void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        setContentView(R.layout.activity_slide);
	        
	        mTitle = mDrawerTitle = getTitle();
	        
	        //load slide menu items
	        navMenuTitles = getResources().getStringArray(R.array.nav_drawer_items);
	        
	        navMenuIcons = getResources().obtainTypedArray(R.array.nav_drawer_icons);
	        
	        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
	        
	        mDrawerList = (ListView) findViewById(R.id.list_slidermenu);
	        
	        navDrawerItems = new ArrayList<NavDrawerItem>();
	        
	        //adding nav drawer items to array
	        //Home
	        navDrawerItems.add(new NavDrawerItem(navMenuTitles[0], navMenuIcons.getResourceId(0, -1)));
	        navDrawerItems.add(new NavDrawerItem(navMenuTitles[1], navMenuIcons.getResourceId(1, -1)));
	        navDrawerItems.add(new NavDrawerItem(navMenuTitles[2], navMenuIcons.getResourceId(2, -1)));
	        navDrawerItems.add(new NavDrawerItem(navMenuTitles[3], navMenuIcons.getResourceId(3, -1), true, "22"));
	        navDrawerItems.add(new NavDrawerItem(navMenuTitles[4], navMenuIcons.getResourceId(4, -1)));
	        navDrawerItems.add(new NavDrawerItem(navMenuTitles[5], navMenuIcons.getResourceId(5, -1), true, "50+"));
	        
	        //Recycle the typed array.
	        navMenuIcons.recycle();
	        
	        //setting the nav drawer list adapter
	        adapter = new NavDrawerListAdapter(getApplicationContext(), navDrawerItems);
	        mDrawerList.setAdapter(adapter);
	        
	        //enabling action bar app icon and behaving it as toggle button
	        getActionBar().setDisplayHomeAsUpEnabled(true);
	        getActionBar().setHomeButtonEnabled(true);
	        
	        mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, 
	        		R.drawable.ic_drawer, 
	        		R.string.app_name, 
	        		R.string.app_name){
	        	public void onDrawerClosed(View view){
	        		getActionBar().setTitle(mTitle);
	        		///calling onPrepareOptionMenu() to show action bar icons
	        		invalidateOptionsMenu();
	        	}
	        	
	        	public void onDrawerOpened(View drawerView){
	        		getActionBar().setTitle(mDrawerTitle);
	        		invalidateOptionsMenu();
	        	}
	        };
	        mDrawerLayout.setDrawerListener(mDrawerToggle);
	        
	        if (savedInstanceState == null) {
				//on first time display view for first nav item
	        	displayView(0);
			}
	 }
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu){
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item){
		if (mDrawerToggle.onOptionsItemSelected(item)) {
			return true;
		}
		
		switch (item.getItemId()) {
		case R.id.action_settings:
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		// TODO Auto-generated method stub
		super.onConfigurationChanged(newConfig);
		mDrawerToggle.onConfigurationChanged(newConfig);
	}

	@Override
	protected void onPostCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onPostCreate(savedInstanceState);
		mDrawerToggle.syncState();
	}

	@Override
	public boolean onPrepareOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
		menu.findItem(R.id.action_settings).setVisible(!drawerOpen);
		return super.onPrepareOptionsMenu(menu);
	}

	@Override
	public void setTitle(CharSequence title) {
		// TODO Auto-generated method stub
		mTitle = title;
		getActionBar().setTitle(mTitle);
	}
	
	/**
	 * Diplaying fragment view for selected nav drawer list item
	 * */
	private void displayView(int position) {
		// update the main content by replacing fragments
		Fragment fragment = null;
		switch (position) {
		
		default:
			break;
		}
	}
	
}
